# Map leader key to C-a to match screen
unbind C-b
set -g prefix C-a
# Still send 'go to beginning of line' key
bind a send-prefix

# Enable pane/window control with the mouse
set -g mouse on

# Show/hide status bar
bind b set -g status

# Reload config
bind r source-file ~/.tmux.conf

# Splitting windows
bind-key '-' split-window
bind-key | split-window -h
# Move panes and windows around
bind < swap-window -t -1
bind > swap-window -t +1
# Renumber windows after any deletion so there's no gaps
set -g renumber-windows on
# Cycle through windows
bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Set escape time to 0
set -sg escape-time 0

# Set higher history limit
set-option -g history-limit 10000

# Zero-based indexing is sure great in programming languages,
# but not so much in terminal multiplexers where that zero is all the way on the other side of the keyboard.
set-option -g base-index 1


# Basic color scheme
# set -g default-terminal screen-256color
setw -g mode-style bold
set -g status-style dim
set -g status-left-length 25
set -g status-right-length 80
setw -g window-status-current-style bold
set -g message-style bold

# Temporary workaround for st
set -as terminal-overrides ',st*:Ss@'
set -as terminal-overrides ',st*:Ss=\E[%p1%d q:Se=\E[2 q'
